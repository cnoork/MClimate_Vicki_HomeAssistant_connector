[
    {
        "id": "487d42b63856018f",
        "type": "group",
        "z": "ec12d4fa86b9e679",
        "name": "Connector for MClimate Vicki (TRV over LoRa) and HomeAssistant through MQTT",
        "style": {
            "label": true
        },
        "nodes": [
            "a3a5d958695557cb",
            "8037b07fe3d6c2d7",
            "935344a97c02aae1",
            "7ad05cd8720d4f01",
            "eb1bd867e7aa109d",
            "b04dd061dd175e07",
            "2632d812c108afe4",
            "e338b080ceb54d0a",
            "de03bc4c13ae7328",
            "2ed81ea2df9727f4",
            "1814cec3dccf9f98",
            "a185dfaaa705cbb3",
            "a66238bc57f61ab0",
            "4c9aece75542d2ad",
            "56f3ee35cfdcef12",
            "5c2f7e73b4acbd69",
            "967beb3b650f635b",
            "02e6c9bd365435cc",
            "5c943d1391bad6ab",
            "65b350adea1ade0f",
            "c413a6b88a7bba89",
            "ac23c770cd87dcbe",
            "989b53d7e5b50516",
            "1cbc0901a01a5bdb",
            "12a689831b07466d",
            "abdc88dbe21bd760",
            "b47fac0e411bde12",
            "4eab435e498049da",
            "2cdd4dbd3ee72448",
            "378b8d22db75c001",
            "8f532cb98a569317",
            "b2eddbc63f783015",
            "756bf830d251a323",
            "f84938f7173f097c",
            "8dbab41c935b0477",
            "2d97f37284085cb4",
            "1287e4346445ab14",
            "0c7380b505667f52",
            "fe96cbaa2e6280c0",
            "9991c42442a877a2",
            "3749d18dc34888d3"
        ],
        "x": 134,
        "y": 99,
        "w": 1412,
        "h": 1082
    },
    {
        "id": "a3a5d958695557cb",
        "type": "mqtt in",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "",
        "topic": "v3/+/devices/+/up/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "84e0b16.466435",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 240,
        "wires": [
            [
                "8037b07fe3d6c2d7"
            ]
        ]
    },
    {
        "id": "8037b07fe3d6c2d7",
        "type": "function",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "Merge Lora data with prefious data",
        "func": "// load general settings\nmsg.settings = flow.get('vicki_settings')\n\n// temporarly working object\nmsg.temp = {\n    topicsLora: {}\n};\n\n// split topics in arrays\nfor (let topicLora in msg.settings.topicsLora) {\n    msg.temp.topicsLora[topicLora] = msg.settings.topicsLora[topicLora].split('/')\n}\n\n// create result object if not excist\nif (!msg.result) { msg.result = {} }                            \n\nmsg.result.timestamp = new Date().getTime()\n\n// get deviceName and if not excist exit function without any action\nmsg.temp.deviceName = msg.payload\nfor (let i in msg.temp.topicsLora.deviceName) {\n    if (msg.temp.deviceName[msg.temp.topicsLora.deviceName[i]]) {\n        msg.temp.deviceName = msg.temp.deviceName[msg.temp.topicsLora.deviceName[i]]\n    }\n}\nif (typeof(msg.temp.deviceName) == 'string') {\n    msg.result.deviceName = msg.temp.deviceName\n    msg.settings.topicHomeassistantDeviceGet = msg.settings.topicHomeassistantDeviceStatus + '/vicki/' + msg.result.deviceName + '/get'\n    msg.settings.topicHomeassistantDeviceSet = msg.settings.topicHomeassistantDeviceStatus + '/vicki/' + msg.result.deviceName + '/set'\n} else {\n    msg.reason = 'deviceName not found or not a string'\n    return([msg, null, null])                               // when no device name could be found do nothing, only debug output\n}\nmsg.result.loraTopic = msg.topic.substring(0, msg.topic.indexOf(msg.result.deviceName) + msg.result.deviceName.length)\n\n// get prefious result from memory if excist\nmsg.result.prefiousData = flow.get('loraPayload_' + msg.result.deviceName) || {}\n\n// if deviceUpdate not excist create with value zero\nif (!msg.result.prefiousData.deviceUpdate) {                       \n    msg.result.prefiousData.deviceUpdate = 0\n}\n\n// collect all sensorData from lora message\nmsg.temp.sensorData = msg.payload\nfor (let key in msg.temp.topicsLora.sensorData) {\n    if (msg.temp.sensorData[msg.temp.topicsLora.sensorData[key]]) {\n        msg.temp.sensorData = msg.temp.sensorData[msg.temp.topicsLora.sensorData[key]]\n    }\n}\n\n// if object excist in sensorData convert it to an string variable\nmsg.result.sensorData = {}\nfor (let key in msg.temp.sensorData) {\n    if (typeof(msg.temp.sensorData[key]) == 'object') {\n        for (let keyObject in msg.temp.sensorData[key]) {\n            let keyNew = keyObject[0].toUpperCase() + keyObject.slice(1);\n            msg.result.sensorData[key + keyNew] = msg.temp.sensorData[key][keyObject]\n        }\n    } else {\n        msg.result.sensorData[key] = msg.temp.sensorData[key]\n    }\n}\n\n// round temperature and humidty\nif (msg.result.sensorData.relativeHumidity) { msg.result.sensorData.relativeHumidity = Math.round(msg.result.sensorData.relativeHumidity) }\nif (msg.result.sensorData.sensorTemperature) { msg.result.sensorData.sensorTemperature = Math.round(msg.result.sensorData.sensorTemperature * 10) / 10 }\n\n// calculate battery status in %\nif (msg.result.sensorData.batteryVoltage) {\n\tmsg.result.sensorData.battery = Math.round(100 * (msg.result.sensorData.batteryVoltage - msg.settings.batteryLow) / (msg.settings.batteryFull - msg.settings.batteryLow))\n\tif (msg.result.sensorData.battery > 100) {\n\t\tmsg.result.sensorData.battery = 100\n\t} else if (msg.result.sensorData.battery < 1) {\n\t\tmsg.result.sensorData.battery = 1\n\t}\n}\n\n// calculate valve status in %\nif (msg.result.sensorData.attachedBackplate == true) {\n    if (msg.result.sensorData.motorPosition || msg.result.sensorData.motorPosition != 0) {\n        msg.result.sensorData.valve_pct = Math.ceil(100 * ((msg.result.sensorData.motorRange - msg.result.sensorData.motorPosition) / msg.result.sensorData.motorRange))\n    } else {\n        msg.result.sensorData.valve_pct = 100\n    }\n} else {\n    msg.result.sensorData.valve_pct = 100\n}\n\n// define operational mode\nif (msg.result.sensorData.attachedBackplate) {\n    msg.result.sensorData.system_mode = 'heat'\n} else {\n    msg.result.sensorData.system_mode = 'off'\n}\n\n// get best rssi value from all gateways\nmsg.temp.gatewayData = msg.payload\nfor (let key in msg.temp.topicsLora.gatewayData) {               // collect all gateways\n    if (msg.temp.gatewayData[msg.temp.topicsLora.gatewayData[key]]) {\n        msg.temp.gatewayData = msg.temp.gatewayData[msg.temp.topicsLora.gatewayData[key]]\n    }\n}\nfor (let i in msg.temp.gatewayData) {                        // get the highest rssi the data is received\n    for (let key in msg.temp.gatewayData[i]) {\n        if (key.toLowerCase().includes(\"rssi\")) {\n            if (!msg.temp.rssi) {\n                msg.temp.rssi = msg.temp.gatewayData[i][key]\n            } else if (msg.temp.gatewayData[i][key] > msg.result.rssi) {\n                msg.temp.rssi = msg.temp.gatewayData[i][key]\n            }\n        }\n    }\n}\nif (msg.temp.rssi) {\n    msg.result.metadata = {\n        rssi: msg.temp.rssi\n    }\n}\n\n// define object for latest status all data\nmsg.result.newData = {\n    deviceUpdate: msg.result.prefiousData.deviceUpdate,\n    sensorData: {},\n    metaData: {}\n}\n\nif(msg.result.prefiousData.downlink) {\n    msg.result.newData.downlink = msg.result.prefiousData.downlink\n}\n\n// load newData with the prefiousData\nfor (let key in msg.result.prefiousData.sensorData) {\n    msg.result.newData.sensorData[key] = msg.result.prefiousData.sensorData[key]\n}\n\n// add or update newData with last values\nfor (let key in msg.result.sensorData) {\n    msg.result.newData.sensorData[key] = msg.result.sensorData[key]\n}\n\n// meta data is alway only the last one\nif (msg.result.metadata) {\n    msg.result.newData.metaData = msg.result.metadata\n}\n\nmsg.result.newData.loraTopic = msg.result.loraTopic\n\nflow.set('loraPayload_' + msg.result.deviceName, msg.result.newData)\n\nmsg.sensorData = {}\nfor (let key in msg.result.newData.sensorData) {\n    if (typeof (msg.result.newData.sensorData[key]) !== 'object') {\n        msg.sensorData[key] = msg.result.newData.sensorData[key]\n    }\n}\n\nmsg.metaData = {}\nfor (let key in msg.result.newData.metaData) {\n    if (typeof (msg.result.newData.metaData[key]) !== 'object') {\n        msg.metaData[key] = msg.result.newData.metaData[key]\n    }\n}\n\nvar msgDeviceData = {\n    settings: msg.settings,\n    result: msg.result,\n    sensorData: msg.sensorData,\n    metaData: msg.metaData,\n}\n\n// send to deviceUpdate and sensorData when beyond the time window\nif (msg.result.timestamp > msg.result.newData.deviceUpdate + msg.settings.deviceUpdateWindow * 60000) {\n    msg.reason = 'update device & sensorData'\n    return ([msg, msgDeviceData, msgDeviceData]);\n}\n\n// send only to sensorData when beyond the time window\nif (msg.result.sensorData.targetTemperature) {\n    msg.reason = 'update sensorData'\n    return ([msg, null, msgDeviceData]);\n}\n\nmsg.return = 'no update possible'\nreturn ([msg, null, null]);\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 240,
        "wires": [
            [
                "935344a97c02aae1"
            ],
            [
                "7ad05cd8720d4f01",
                "b04dd061dd175e07"
            ],
            [
                "eb1bd867e7aa109d",
                "2632d812c108afe4"
            ]
        ],
        "outputLabels": [
            "debug",
            "device update",
            "sensorData update"
        ]
    },
    {
        "id": "935344a97c02aae1",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 69",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 220,
        "wires": []
    },
    {
        "id": "7ad05cd8720d4f01",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 70",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 260,
        "wires": []
    },
    {
        "id": "eb1bd867e7aa109d",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 71",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 540,
        "wires": []
    },
    {
        "id": "b04dd061dd175e07",
        "type": "function",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "Update HA device config",
        "func": "//update the timestamp\nmsg.result.newData.deviceUpdate = msg.result.timestamp\nflow.set('loraPayload_' + msg.result.deviceName, msg.result.newData)\n\n// set min and max temperature when this is not available\nif(!msg.sensorData.temperatureRangeSettingsMax) {\n  msg.sensorData.temperatureRangeSettingsMax = 30                     //default value MClimate\n}\nif(!msg.sensorData.temperatureRangeSettingsMin) {\n  msg.sensorData.temperatureRangeSettingsMin = 5                      //default value MClimate\n}\n\n// repeated information for all type of sensors for th device\nmsg.device = {\n  identifiers: [msg.settings.topicHomeassistantDeviceStatus + '_' + msg.result.deviceName],\n  manufacturer: msg.settings.manufacturer,\n  model: msg.settings.model,\n  name: msg.result.deviceName\n}\nif(msg.sensorData.deviceVersionsSoftware){msg.device.sw_version = msg.sensorData.deviceVersionsSoftware}\nif(msg.sensorData.deviceVersionsHardware){msg.device.hw_version = msg.sensorData.deviceVersionsHardware}\n\n// make an array for all sensors\nmsg.homeassistant = []\n\nmsg.homeassistant.push({\n  topic: msg.settings.topicHomeassistant + '/climate/' + msg.result.deviceName + '/trv_climate/config',\n  payload: {\n    device: msg.device,\n    object_id: msg.result.deviceName + '_trv_climate',\n    unique_id: msg.result.deviceName + '_trv_climate_' + msg.settings.topicHomeassistantDeviceStatus + '',\n    device_class: 'temperature',\n    name: 'Radiator thermostat',\n    modes: ['off', 'heat'],\n    max_temp: msg.sensorData.temperatureRangeSettingsMax,\n    min_temp: msg.sensorData.temperatureRangeSettingsMin,\n    temperature_unit: 'C',\n    temp_step: 1,\n\n    json_attributes_topic: msg.settings.topicHomeassistantDeviceGet,\n    \n    mode_state_topic: msg.settings.topicHomeassistantDeviceGet,\n    mode_state_template: '{{ value_json.system_mode  if value_json.system_mode==\"off\" else \"heat\"}}',\n    \n    current_temperature_topic: msg.settings.topicHomeassistantDeviceGet,\n    current_temperature_template: '{{ value_json.sensorTemperature }}',\n    \n    temperature_state_topic: msg.settings.topicHomeassistantDeviceGet,\n    temperature_state_template: '{{ value_json.targetTemperature }}',\n\n    temperature_command_topic: msg.settings.topicHomeassistantDeviceSet + '/targetTemperature',\n    mode_command_topic: msg.settings.topicHomeassistantDeviceSet + '/system_mode',\n  }\n})\n\nmsg.homeassistant.push({\n  topic: msg.settings.topicHomeassistant + '/number/' + msg.result.deviceName + '/trv_number/config',\n  payload: {\n    device: msg.device,\n    object_id: msg.result.deviceName + '_trv_number',\n    unique_id: msg.result.deviceName + '_trv_number_' + msg.settings.topicHomeassistantDeviceStatus + '',\n    device_class: 'temperature',\n    name: 'Target temperature',\n    max: msg.sensorData.temperatureRangeSettingsMax,\n    min: msg.sensorData.temperatureRangeSettingsMin,\n    unit_of_measurement: '°C',\n    step: 1,\n    mode: 'slider',\n    \n    state_topic: msg.settings.topicHomeassistantDeviceGet,\n    value_template: '{{ value_json.targetTemperature }}',\n\n    command_topic: msg.settings.topicHomeassistantDeviceSet + '/targetTemperature',\n  }\n})\n\nmsg.homeassistant.push({\n  topic: msg.settings.topicHomeassistant + '/sensor/' + msg.result.deviceName + '/battery/config',\n  payload: {\n    device: msg.device,\n    object_id: msg.result.deviceName + '_battery',\n    unique_id: msg.result.deviceName + '_battery_' + msg.settings.topicHomeassistantDeviceStatus + '',\n    enabled_by_default: true,\n    state_class: 'measurement',\n    device_class: 'battery',\n    entity_category: 'diagnostic',\n    unit_of_measurement: '%',\n\n    state_topic: msg.settings.topicHomeassistantDeviceGet,\n    json_attributes_topic: msg.settings.topicHomeassistantDeviceGet,\n    value_template: '{{ value_json.battery }}'\n  }\n})\n\nmsg.homeassistant.push({\n  topic: msg.settings.topicHomeassistant + '/sensor/' + msg.result.deviceName + '/rssi/config',\n  payload: {\n    device: msg.device,\n    object_id: msg.result.deviceName + '_rssi',\n    unique_id: msg.result.deviceName + '_rssi_' + msg.settings.topicHomeassistantDeviceStatus + '',\n    enabled_by_default: false,\n    state_class: 'measurement',\n    device_class: 'signal_strength',\n    entity_category: 'diagnostic',\n\n    state_topic: msg.settings.topicHomeassistantDeviceGet,\n    json_attributes_topic: msg.settings.topicHomeassistantDeviceGet,\n    value_template: '{{ value_json.rssi }}',\n  }\n})\n\nmsg.homeassistant.push({\n  topic: msg.settings.topicHomeassistant + '/sensor/' + msg.result.deviceName + '/valve_pct/config',\n  payload: {\n    device: msg.device,\n    object_id: msg.result.deviceName + '_valve_pct',\n    unique_id: msg.result.deviceName + '_valve_pct_' + msg.settings.topicHomeassistantDeviceStatus + '',\n    name: 'Valve open status',\n    unit_of_measurement: '%',\n    icon: 'mdi:pipe-valve',\n\n    state_topic: msg.settings.topicHomeassistantDeviceGet,\n    json_attributes_topic: msg.settings.topicHomeassistantDeviceGet,\n    value_template: '{{ value_json.valve_pct }}',\n  }\n})\n\nmsg.homeassistant.push({\n  topic: msg.settings.topicHomeassistant + '/sensor/' + msg.result.deviceName + '/humidty/config',\n  payload: {\n    device: msg.device,\n    object_id: msg.result.deviceName + '_humidity',\n    unique_id: msg.result.deviceName + '_humidity_' + msg.settings.topicHomeassistantDeviceStatus + '',\n    device_class: 'humidity',\n    unit_of_measurement: '%',\n\n    state_topic: msg.settings.topicHomeassistantDeviceGet,\n    json_attributes_topic: msg.settings.topicHomeassistantDeviceGet,\n    value_template: '{{ value_json.relativeHumidity }}',\n  }\n})\n\nmsg.homeassistant.push({\n  topic: msg.settings.topicHomeassistant + '/binary_sensor/' + msg.result.deviceName + '/attachedBackplate/config',\n  payload: {\n    device: msg.device,\n    object_id: msg.result.deviceName + '_attachedBackplate_',\n    unique_id: msg.result.deviceName + '_attachedBackplate_' + msg.settings.topicHomeassistantDeviceStatus,\n    name: 'Attached backplate',\n    icon: 'mdi:engine',\n    payload_on: true,\n    payload_off: false,\n\n    state_topic: msg.settings.topicHomeassistantDeviceGet,\n    json_attributes_topic: msg.settings.topicHomeassistantDeviceGet,\n    value_template: '{{ value_json.attachedBackplate }}',\n  }\n})\n\nmsg.homeassistant.push({\n  topic: msg.settings.topicHomeassistant + '/binary_sensor/' + msg.result.deviceName + '/childLock/config',\n  payload: {\n    device: msg.device,\n    object_id: msg.result.deviceName + '_childLock',\n    unique_id: msg.result.deviceName + '_childLock_' + msg.settings.topicHomeassistantDeviceStatus,\n    name: 'Child lock',\n    icon: 'mdi:lock',\n    payload_off: false,\n    payload_on: true,\n    payload_available: 'on',\n    payload_not_available: 'off',\n\n    state_topic: msg.settings.topicHomeassistantDeviceGet,\n    json_attributes_topic: msg.settings.topicHomeassistantDeviceGet,\n    value_template: '{{ value_json.childLock }}',\n  }\n})\n\nmsg.homeassistant.push({\n  topic: msg.settings.topicHomeassistant + '/binary_sensor/' + msg.result.deviceName + '/openWindow/config',\n  payload: {\n    device: msg.device,\n    object_id: msg.result.deviceName + '_openWindow',\n    unique_id: msg.result.deviceName + '_openWindow_' + msg.settings.topicHomeassistantDeviceStatus,\n    name: 'Open window detection',\n    icon: 'mdi:window-closed-variant',\n    payload_off: false,\n    payload_on: true,\n    payload_available: 'on',\n    payload_not_available: 'off',\n\n    state_topic: msg.settings.topicHomeassistantDeviceGet,\n    json_attributes_topic: msg.settings.topicHomeassistantDeviceGet,\n    value_template: '{{ value_json.openWindow }}',\n  }\n})\n\n// send all sensors one by one to the mqtt broker\nfor (let i = 0; i < msg.homeassistant.length; i++) {\n  let msgMqtt = {\n    topic: msg.homeassistant[i].topic,\n    payload: msg.homeassistant[i].payload\n  }\n\n  node.send([null, msgMqtt]);\n}\n\nreturn [msg, null];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "de03bc4c13ae7328"
            ],
            [
                "1814cec3dccf9f98",
                "a185dfaaa705cbb3"
            ]
        ],
        "outputLabels": [
            "debug",
            "mqtt2homeassistant"
        ]
    },
    {
        "id": "2632d812c108afe4",
        "type": "delay",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "e338b080ceb54d0a"
            ]
        ]
    },
    {
        "id": "e338b080ceb54d0a",
        "type": "function",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "Update HA sensorData",
        "func": "// mqtt message to update sensorData\nvar msgOut = {\n\ttopic: msg.settings.topicHomeassistantDeviceGet,\n    payload: {\n\t  \tdevice: {\n\t  \t\tfriendlyName: msg.result.deviceName,\n\t  \t\tieeeAddr: msg.result.deviceName,\n\t\t  \tmanufacturerName: msg.settings.manufacturer,\n\t\t  \tmodel: msg.settings.model,\n\t  \t\tpowerSource: 'Battery',\n\t  \t}\n\t}\n}\n\n// add all sensorData\nfor(let key in msg.sensorData) {\n\tmsgOut.payload[key] = msg.sensorData[key]\n}\n\n// add all metaData\nfor(let key in msg.metaData) {\n\tmsgOut.payload[key] = msg.metaData[key]\n}\n\nreturn [msg, msgOut];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 580,
        "wires": [
            [
                "2ed81ea2df9727f4"
            ],
            [
                "a66238bc57f61ab0",
                "a185dfaaa705cbb3"
            ]
        ],
        "outputLabels": [
            "debug",
            "mqtt2homeassistant"
        ]
    },
    {
        "id": "de03bc4c13ae7328",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 72",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 300,
        "wires": []
    },
    {
        "id": "2ed81ea2df9727f4",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 73",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 580,
        "wires": []
    },
    {
        "id": "1814cec3dccf9f98",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 74",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 340,
        "wires": []
    },
    {
        "id": "a185dfaaa705cbb3",
        "type": "mqtt out",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "server/mosquittoDev",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e0a907a349b19b14",
        "x": 1330,
        "y": 460,
        "wires": []
    },
    {
        "id": "a66238bc57f61ab0",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 75",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 620,
        "wires": []
    },
    {
        "id": "4c9aece75542d2ad",
        "type": "mqtt in",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "",
        "topic": "lora2nodered2mqtt/vicki/+/set/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e0a907a349b19b14",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 760,
        "wires": [
            [
                "56f3ee35cfdcef12"
            ]
        ]
    },
    {
        "id": "56f3ee35cfdcef12",
        "type": "function",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "set command from Home Assistant",
        "func": "// load general settings\nmsg.settings = flow.get('vicki_settings')\n \n// temporarly working object\nmsg.temp = {\n    topicArray: msg.topic.split(\"/\")\n}\n\n// create result object if not excist\nif (!msg.result) { msg.result = {} }\n\nmsg.result.deviceName = msg.temp.topicArray[2]\nmsg.result.variable = msg.temp.topicArray[4]\nmsg.result.commandSet = 'set' + msg.result.variable[0].toUpperCase() + msg.result.variable.slice(1)\nmsg.result.value = msg.payload\nmsg.result.timestamp = new Date().getTime()\n\nmsg.result.topicHomeassistantDeviceGe = msg.settings.topicHomeassistantDeviceStatus + '/vicki/' + msg.result.deviceName + '/get'\nmsg.result.topicHomeassistantDeviceSet = msg.settings.topicHomeassistantDeviceStatus + '/vicki/' + msg.result.deviceName + '/set'\n\n// get prefious result from memory if excist\nmsg.result.prefiousData = flow.get('loraPayload_' + msg.result.deviceName) || {}\n//msg.result.prefiousData = flow.get('loraPayload_' + msg.result.deviceName) || { timestamp: 0 }\n\n// define object for latest status all data\nmsg.result.newData = {\n    deviceUpdate: msg.result.prefiousData.deviceUpdate,\n    sensorData: {},\n    metaData: msg.result.prefiousData.metaData,\n    loraTopic: msg.result.prefiousData.loraTopic\n}\n\n// load sensorData from prefiousData into newData\nfor (let key in msg.result.prefiousData.sensorData) {\n    msg.result.newData.sensorData[key] = msg.result.prefiousData.sensorData[key]\n}\n\n// update newData with last values\nmsg.result.newData.sensorData[msg.result.variable] = msg.result.value\n\nif (msg.result.prefiousData.downlink) {\n    msg.result.newData.downlink = msg.result.prefiousData.downlink\n} else {\n    msg.result.newData.downlink = {\n        [msg.result.variable]: msg.result.prefiousData.sensorData[msg.result.variable],\n    }\n}\nmsg.result.newData.downlink.commandSet = msg.result.commandSet\nmsg.result.newData.downlink.variable = msg.result.variable\nmsg.result.newData.downlink.value = msg.result.value\nmsg.result.newData.downlink.timestamp = msg.result.timestamp\n\nflow.set('loraPayload_' + msg.result.deviceName, msg.result.newData)\n\nmsg.sensorData = {}\nfor (let key in msg.result.newData.sensorData) {\n    if (typeof (msg.result.newData.sensorData[key]) !== 'object') {\n        msg.sensorData[key] = msg.result.newData.sensorData[key]\n    }\n}\n\nmsg.metaData = {}\nfor (let key in msg.result.newData.metaData) {\n    if (typeof (msg.result.newData.metaData[key]) !== 'object') {\n        msg.metaData[key] = msg.result.newData.metaData[key]\n    }\n}\n\nvar msgDeviceData = {\n    settings: msg.settings,\n    result: msg.result,\n    sensorData: msg.sensorData,\n    metaData: msg.metaData,\n    downlink: msg.result.newData.downlink,\n    timestamp: msg.result.timestamp,\n}\n\nreturn [msg, msgDeviceData, msgDeviceData];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 760,
        "wires": [
            [
                "5c2f7e73b4acbd69"
            ],
            [
                "967beb3b650f635b",
                "2d97f37284085cb4"
            ],
            [
                "989b53d7e5b50516",
                "02e6c9bd365435cc"
            ]
        ],
        "outputLabels": [
            "debug",
            "sensorData update",
            "lora update"
        ]
    },
    {
        "id": "5c2f7e73b4acbd69",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 76",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 740,
        "wires": []
    },
    {
        "id": "967beb3b650f635b",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 78",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 780,
        "wires": []
    },
    {
        "id": "02e6c9bd365435cc",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 79",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 820,
        "wires": []
    },
    {
        "id": "5c943d1391bad6ab",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 77",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 860,
        "wires": []
    },
    {
        "id": "65b350adea1ade0f",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 81",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 900,
        "wires": []
    },
    {
        "id": "c413a6b88a7bba89",
        "type": "function",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "Send lora downlink",
        "func": "\nmsg.result.prefiousData = flow.get('loraPayload_' + msg.result.deviceName) || {}\n\nif (msg.result.prefiousData.downlink.timestamp == msg.result.timestamp) {\n    if (msg.result.value != msg.result.prefiousData.downlink[msg.result.variable]) {\n        var msgLora = {\n            topic: msg.result.newData.loraTopic + '/down/push',\n            payload: {\n                downlinks: [\n                    {\n                        f_port: 1,\n                        decoded_payload: {[msg.result.commandSet]: msg.result.value},\n                        priority: \"NORMAL\",\n                        confirmed: false\n                    }\n                ]\n            }\n        }\n        node.send([msg, msgLora])\n        msg.exit = 'lora message send'\n    } else {\n        msg.exit = 'targetTemperature the same'\n    }\n    msg.result.newData = {}\n    for (let key in msg.result.prefiousData) {\n        if(key != 'downlink') {\n            msg.result.newData[key] = msg.result.prefiousData[key]\n        }\n    }\n    \n    flow.set('loraPayload_' + msg.result.deviceName, msg.result.newData)\n} else {\n    msg.exit = 'timestamp different'\n}\n\nreturn [msg, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 860,
        "wires": [
            [
                "5c943d1391bad6ab"
            ],
            [
                "65b350adea1ade0f",
                "ac23c770cd87dcbe"
            ]
        ],
        "outputLabels": [
            "debug",
            "mqtt2lora"
        ]
    },
    {
        "id": "ac23c770cd87dcbe",
        "type": "mqtt out",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "TTN ha-thermostaat",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "84e0b16.466435",
        "x": 1320,
        "y": 1020,
        "wires": []
    },
    {
        "id": "989b53d7e5b50516",
        "type": "delay",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "delay 5s",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 860,
        "wires": [
            [
                "c413a6b88a7bba89"
            ]
        ]
    },
    {
        "id": "1cbc0901a01a5bdb",
        "type": "inject",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 140,
        "wires": [
            [
                "12a689831b07466d"
            ]
        ]
    },
    {
        "id": "12a689831b07466d",
        "type": "function",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "\"vicki_settings\" to flow variable",
        "func": "// general settings\n// topic names which could be different per Lora server\nmsg.settings = {\n    manufacturer: 'MClimate',\n    model: 'Vicki - LoRaWAN Smart Radiator Thermostat',\n    topicHomeassistantDeviceStatus: 'lora2nodered2mqtt',\n    topicHomeassistant: 'homeassistant',\n    topicsLora: {\n        deviceName: 'end_device_ids/device_id',             // TTN & TTI\n        sensorData: 'uplink_message/decoded_payload',       // TTN & TTI\n        gatewayData: 'uplink_message/rx_metadata'           // TTN & TTI\n    },\n    deviceUpdateWindow: 1400,      // in minutes to update device in HA\n//    deviceUpdateWindow: 10,      // in minutes\n//    deviceUpdateWindow: 1,      // in minutes\n    batteryFull: 1.7 * 2,\n\tbatteryLow: 1.3 * 2\n}\n\nflow.set('vicki_settings', msg.settings)\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 140,
        "wires": [
            [
                "abdc88dbe21bd760"
            ]
        ]
    },
    {
        "id": "abdc88dbe21bd760",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 87",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 140,
        "wires": []
    },
    {
        "id": "b47fac0e411bde12",
        "type": "function",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "manual request Vicki version and temperature range",
        "func": "// one or more deviceNames where the software and temperature range needs to be requested\n//msg.deviceNameList = ['device_1', 'device_2', 'device_X']     \n\nmsg.deviceNameList = ['eui-70b3d52dd3015cd5', 'eui-70b3d52dd3015c93']\n\nfor (let i in msg.deviceNameList) {\n    let deviceName = msg.deviceNameList[i]\n    var msgLora = {\n        topic: 'v3/ha-thermostaat@ttn/devices/' + deviceName + '/down/push',\n        payload: {\n            downlinks: [\n                {\n                    f_port: 1,\n//                    decoded_payload: { getDeviceVersions: '', getTemperatureRange: '' },\n                    decoded_payload: { getDeviceVersions: '', getAllParams: '' },\n                    priority: \"NORMAL\",\n                    confirmed: false\n                }\n            ]\n        }\n    }\n    node.send([null, msgLora]);\n}\n\nreturn [msg, null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1120,
        "wires": [
            [
                "4eab435e498049da"
            ],
            [
                "378b8d22db75c001",
                "ac23c770cd87dcbe"
            ]
        ],
        "outputLabels": [
            "debug",
            "mqtt2lora"
        ]
    },
    {
        "id": "4eab435e498049da",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 88",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1100,
        "wires": []
    },
    {
        "id": "2cdd4dbd3ee72448",
        "type": "inject",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1120,
        "wires": [
            [
                "b47fac0e411bde12"
            ]
        ]
    },
    {
        "id": "378b8d22db75c001",
        "type": "debug",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "debug 89",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1140,
        "wires": []
    },
    {
        "id": "8f532cb98a569317",
        "type": "comment",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "Don't use it to often because there is a limit/fair-use-policy for downlink messages with public Lora servers",
        "info": "Also uplinks should no bet set more frequently then every 4 minutes, better to use 10 or 15 minutes",
        "x": 520,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b2eddbc63f783015",
        "type": "comment",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "TTN mqtt",
        "info": "",
        "x": 220,
        "y": 200,
        "wires": []
    },
    {
        "id": "756bf830d251a323",
        "type": "comment",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "TTN mqtt",
        "info": "",
        "x": 1280,
        "y": 980,
        "wires": []
    },
    {
        "id": "f84938f7173f097c",
        "type": "comment",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "local mqtt",
        "info": "",
        "x": 1280,
        "y": 420,
        "wires": []
    },
    {
        "id": "8dbab41c935b0477",
        "type": "comment",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "local mqtt",
        "info": "",
        "x": 220,
        "y": 720,
        "wires": []
    },
    {
        "id": "2d97f37284085cb4",
        "type": "delay",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 830,
        "y": 660,
        "wires": [
            [
                "e338b080ceb54d0a"
            ]
        ]
    },
    {
        "id": "1287e4346445ab14",
        "type": "comment",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "msg example",
        "info": "{\n  \"msg\": {\n    \"topic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93/up\",\n    \"payload\": {\n      \"end_device_ids\": {\n        \"device_id\": \"eui-70b3d52dd3015c93\",\n        \"application_ids\": {\n          \"application_id\": \"ha-thermostaat\"\n        },\n        \"dev_eui\": \"70B3D52DD3015C93\",\n        \"join_eui\": \"70B3D52DD3000000\",\n        \"dev_addr\": \"260B9BB7\"\n      },\n      \"correlation_ids\": [\n        \"gs:uplink:01HGZ4176VF60ZFQX5KDZ4CPZJ\"\n      ],\n      \"received_at\": \"2023-12-06T08:31:11.276041322Z\",\n      \"uplink_message\": {\n        \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n        \"f_port\": 2,\n        \"f_cnt\": 2730,\n        \"frm_payload\": \"gRSAqwAAANCQ\",\n        \"decoded_payload\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 66.8,\n          \"sensorTemperature\": 17.59,\n          \"targetTemperature\": 20\n        },\n        \"rx_metadata\": [\n          {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-06T08:31:11.007209062Z\",\n            \"timestamp\": 3036846283,\n            \"rssi\": -55,\n            \"channel_rssi\": -55,\n            \"snr\": 11,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQy7GKqAsaCwjP4sCrBhC2oqQgIPixk5GxyQU=\",\n            \"received_at\": \"2023-12-06T08:31:11.023465134Z\"\n          }\n        ],\n        \"settings\": {\n          \"data_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"frequency\": \"868300000\",\n          \"timestamp\": 3036846283,\n          \"time\": \"2023-12-06T08:31:11.007209062Z\"\n        },\n        \"received_at\": \"2023-12-06T08:31:11.068696429Z\",\n        \"consumed_airtime\": \"0.056576s\",\n        \"locations\": {\n          \"user\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          }\n        },\n        \"version_ids\": {\n          \"brand_id\": \"mclimate\",\n          \"model_id\": \"vicki\",\n          \"hardware_version\": \"2.6\",\n          \"firmware_version\": \"4.2\",\n          \"band_id\": \"EU_863_870\"\n        },\n        \"network_ids\": {\n          \"net_id\": \"000013\",\n          \"ns_id\": \"EC656E0000000181\",\n          \"tenant_id\": \"ttn\",\n          \"cluster_id\": \"eu1\",\n          \"cluster_address\": \"eu1.cloud.thethings.network\"\n        }\n      }\n    },\n    \"qos\": 0,\n    \"retain\": false,\n    \"_msgid\": \"a64ba8871c355685\",\n    \"settings\": {\n      \"manufacturer\": \"MClimate\",\n      \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n      \"topicHomeassistantDeviceStatus\": \"lora2nodered2mqtt\",\n      \"topicHomeassistant\": \"homeassistant\",\n      \"topicsLora\": {\n        \"deviceName\": \"end_device_ids/device_id\",\n        \"sensorData\": \"uplink_message/decoded_payload\",\n        \"gatewayData\": \"uplink_message/rx_metadata\"\n      },\n      \"deviceUpdateWindow\": 1,\n      \"batteryFull\": 3.4,\n      \"batteryLow\": 2.6,\n      \"topicHomeassistantDeviceGet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n      \"topicHomeassistantDeviceSet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/set\"\n    },\n    \"temp\": {\n      \"topicsLora\": {\n        \"deviceName\": [\n          \"end_device_ids\",\n          \"device_id\"\n        ],\n        \"sensorData\": [\n          \"uplink_message\",\n          \"decoded_payload\"\n        ],\n        \"gatewayData\": [\n          \"uplink_message\",\n          \"rx_metadata\"\n        ]\n      },\n      \"deviceName\": \"eui-70b3d52dd3015c93\",\n      \"sensorData\": {\n        \"attachedBackplate\": false,\n        \"batteryVoltage\": 3.3,\n        \"brokenSensor\": false,\n        \"calibrationFailed\": false,\n        \"childLock\": true,\n        \"highMotorConsumption\": false,\n        \"lowMotorConsumption\": false,\n        \"motorPosition\": 0,\n        \"motorRange\": 0,\n        \"openWindow\": false,\n        \"perceiveAsOnline\": true,\n        \"reason\": 81,\n        \"relativeHumidity\": 66.8,\n        \"sensorTemperature\": 17.59,\n        \"targetTemperature\": 20\n      },\n      \"gatewayData\": [\n        {\n          \"gateway_ids\": {\n            \"gateway_id\": \"tabs-noork\",\n            \"eui\": \"58A0CBFFFE800549\"\n          },\n          \"time\": \"2023-12-06T08:31:11.007209062Z\",\n          \"timestamp\": 3036846283,\n          \"rssi\": -55,\n          \"channel_rssi\": -55,\n          \"snr\": 11,\n          \"location\": {\n            \"latitude\": 52.070279619689224,\n            \"longitude\": 5.123664071930953,\n            \"altitude\": 6,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQy7GKqAsaCwjP4sCrBhC2oqQgIPixk5GxyQU=\",\n          \"received_at\": \"2023-12-06T08:31:11.023465134Z\"\n        }\n      ],\n      \"rssi\": -55\n    },\n    \"result\": {\n      \"timestamp\": 1701851471297,\n      \"deviceName\": \"eui-70b3d52dd3015c93\",\n      \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\",\n      \"prefiousData\": {\n        \"deviceUpdate\": 1701851230660,\n        \"sensorData\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 67,\n          \"sensorTemperature\": 17.6,\n          \"targetTemperature\": 20,\n          \"battery\": 87,\n          \"valve_pct\": 100,\n          \"system_mode\": \"off\",\n          \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n          \"f_cnt\": 1838,\n          \"rx_metadata0\": {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-03T21:21:52.483198881Z\",\n            \"timestamp\": 2048701507,\n            \"rssi\": -60,\n            \"channel_rssi\": -60,\n            \"snr\": 9,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQw+jy0AcaDAjw4rOrBhCl+sSIAiC4y4CB0IsQ\",\n            \"received_at\": \"2023-12-03T21:21:52.517249096Z\"\n          },\n          \"settingsData_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"settingsFrequency\": \"868300000\",\n          \"settingsTimestamp\": 2048701507,\n          \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n          \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n          \"consumed_airtime\": \"0.041216s\",\n          \"locationsUser\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"version_idsBrand_id\": \"mclimate\",\n          \"version_idsModel_id\": \"vicki\",\n          \"version_idsHardware_version\": \"2.6\",\n          \"version_idsFirmware_version\": \"4.2\",\n          \"version_idsBand_id\": \"EU_863_870\",\n          \"network_idsNet_id\": \"000013\",\n          \"network_idsNs_id\": \"EC656E0000000181\",\n          \"network_idsTenant_id\": \"ttn\",\n          \"network_idsCluster_id\": \"eu1\",\n          \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n          \"deviceVersionsHardware\": 26,\n          \"deviceVersionsSoftware\": 42,\n          \"joinRetryPeriod\": 10,\n          \"keepAliveTime\": 4,\n          \"openWindowParamsDelta\": 1,\n          \"openWindowParamsDuration\": 10,\n          \"openWindowParamsEnabled\": false,\n          \"openWindowParamsMotorPosition\": 0,\n          \"operationalMode\": 1,\n          \"temperatureRangeSettingsMax\": 21,\n          \"temperatureRangeSettingsMin\": 15,\n          \"uplinkType\": 0\n        },\n        \"metaData\": {\n          \"rssi\": -59\n        },\n        \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\"\n      },\n      \"sensorData\": {\n        \"attachedBackplate\": false,\n        \"batteryVoltage\": 3.3,\n        \"brokenSensor\": false,\n        \"calibrationFailed\": false,\n        \"childLock\": true,\n        \"highMotorConsumption\": false,\n        \"lowMotorConsumption\": false,\n        \"motorPosition\": 0,\n        \"motorRange\": 0,\n        \"openWindow\": false,\n        \"perceiveAsOnline\": true,\n        \"reason\": 81,\n        \"relativeHumidity\": 67,\n        \"sensorTemperature\": 17.6,\n        \"targetTemperature\": 20,\n        \"battery\": 87,\n        \"valve_pct\": 100,\n        \"system_mode\": \"off\"\n      },\n      \"metadata\": {\n        \"rssi\": -55\n      },\n      \"newData\": {\n        \"deviceUpdate\": 1701851230660,\n        \"sensorData\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 67,\n          \"sensorTemperature\": 17.6,\n          \"targetTemperature\": 20,\n          \"battery\": 87,\n          \"valve_pct\": 100,\n          \"system_mode\": \"off\",\n          \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n          \"f_cnt\": 1838,\n          \"rx_metadata0\": {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-03T21:21:52.483198881Z\",\n            \"timestamp\": 2048701507,\n            \"rssi\": -60,\n            \"channel_rssi\": -60,\n            \"snr\": 9,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQw+jy0AcaDAjw4rOrBhCl+sSIAiC4y4CB0IsQ\",\n            \"received_at\": \"2023-12-03T21:21:52.517249096Z\"\n          },\n          \"settingsData_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"settingsFrequency\": \"868300000\",\n          \"settingsTimestamp\": 2048701507,\n          \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n          \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n          \"consumed_airtime\": \"0.041216s\",\n          \"locationsUser\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"version_idsBrand_id\": \"mclimate\",\n          \"version_idsModel_id\": \"vicki\",\n          \"version_idsHardware_version\": \"2.6\",\n          \"version_idsFirmware_version\": \"4.2\",\n          \"version_idsBand_id\": \"EU_863_870\",\n          \"network_idsNet_id\": \"000013\",\n          \"network_idsNs_id\": \"EC656E0000000181\",\n          \"network_idsTenant_id\": \"ttn\",\n          \"network_idsCluster_id\": \"eu1\",\n          \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n          \"deviceVersionsHardware\": 26,\n          \"deviceVersionsSoftware\": 42,\n          \"joinRetryPeriod\": 10,\n          \"keepAliveTime\": 4,\n          \"openWindowParamsDelta\": 1,\n          \"openWindowParamsDuration\": 10,\n          \"openWindowParamsEnabled\": false,\n          \"openWindowParamsMotorPosition\": 0,\n          \"operationalMode\": 1,\n          \"temperatureRangeSettingsMax\": 21,\n          \"temperatureRangeSettingsMin\": 15,\n          \"uplinkType\": 0\n        },\n        \"metaData\": {\n          \"rssi\": -55\n        },\n        \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\"\n      }\n    },\n    \"sensorData\": {\n      \"attachedBackplate\": false,\n      \"batteryVoltage\": 3.3,\n      \"brokenSensor\": false,\n      \"calibrationFailed\": false,\n      \"childLock\": true,\n      \"highMotorConsumption\": false,\n      \"lowMotorConsumption\": false,\n      \"motorPosition\": 0,\n      \"motorRange\": 0,\n      \"openWindow\": false,\n      \"perceiveAsOnline\": true,\n      \"reason\": 81,\n      \"relativeHumidity\": 67,\n      \"sensorTemperature\": 17.6,\n      \"targetTemperature\": 20,\n      \"battery\": 87,\n      \"valve_pct\": 100,\n      \"system_mode\": \"off\",\n      \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n      \"f_cnt\": 1838,\n      \"settingsFrequency\": \"868300000\",\n      \"settingsTimestamp\": 2048701507,\n      \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n      \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n      \"consumed_airtime\": \"0.041216s\",\n      \"version_idsBrand_id\": \"mclimate\",\n      \"version_idsModel_id\": \"vicki\",\n      \"version_idsHardware_version\": \"2.6\",\n      \"version_idsFirmware_version\": \"4.2\",\n      \"version_idsBand_id\": \"EU_863_870\",\n      \"network_idsNet_id\": \"000013\",\n      \"network_idsNs_id\": \"EC656E0000000181\",\n      \"network_idsTenant_id\": \"ttn\",\n      \"network_idsCluster_id\": \"eu1\",\n      \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n      \"deviceVersionsHardware\": 26,\n      \"deviceVersionsSoftware\": 42,\n      \"joinRetryPeriod\": 10,\n      \"keepAliveTime\": 4,\n      \"openWindowParamsDelta\": 1,\n      \"openWindowParamsDuration\": 10,\n      \"openWindowParamsEnabled\": false,\n      \"openWindowParamsMotorPosition\": 0,\n      \"operationalMode\": 1,\n      \"temperatureRangeSettingsMax\": 21,\n      \"temperatureRangeSettingsMin\": 15,\n      \"uplinkType\": 0\n    },\n    \"metaData\": {\n      \"rssi\": -55\n    },\n    \"reason\": \"update device & sensorData\"\n  }\n}\n",
        "x": 1450,
        "y": 220,
        "wires": []
    },
    {
        "id": "0c7380b505667f52",
        "type": "comment",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "msg example",
        "info": "{\n  \"msg\": {\n    \"settings\": {\n      \"manufacturer\": \"MClimate\",\n      \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n      \"topicHomeassistantDeviceStatus\": \"lora2nodered2mqtt\",\n      \"topicHomeassistant\": \"homeassistant\",\n      \"topicsLora\": {\n        \"deviceName\": \"end_device_ids/device_id\",\n        \"sensorData\": \"uplink_message/decoded_payload\",\n        \"gatewayData\": \"uplink_message/rx_metadata\"\n      },\n      \"deviceUpdateWindow\": 1,\n      \"batteryFull\": 3.4,\n      \"batteryLow\": 2.6,\n      \"topicHomeassistantDeviceGet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n      \"topicHomeassistantDeviceSet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/set\"\n    },\n    \"result\": {\n      \"timestamp\": 1701851711922,\n      \"deviceName\": \"eui-70b3d52dd3015c93\",\n      \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\",\n      \"prefiousData\": {\n        \"deviceUpdate\": 1701851471297,\n        \"sensorData\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 67,\n          \"sensorTemperature\": 17.6,\n          \"targetTemperature\": 20,\n          \"battery\": 87,\n          \"valve_pct\": 100,\n          \"system_mode\": \"off\",\n          \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n          \"f_cnt\": 1838,\n          \"rx_metadata0\": {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-03T21:21:52.483198881Z\",\n            \"timestamp\": 2048701507,\n            \"rssi\": -60,\n            \"channel_rssi\": -60,\n            \"snr\": 9,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQw+jy0AcaDAjw4rOrBhCl+sSIAiC4y4CB0IsQ\",\n            \"received_at\": \"2023-12-03T21:21:52.517249096Z\"\n          },\n          \"settingsData_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"settingsFrequency\": \"868300000\",\n          \"settingsTimestamp\": 2048701507,\n          \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n          \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n          \"consumed_airtime\": \"0.041216s\",\n          \"locationsUser\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"version_idsBrand_id\": \"mclimate\",\n          \"version_idsModel_id\": \"vicki\",\n          \"version_idsHardware_version\": \"2.6\",\n          \"version_idsFirmware_version\": \"4.2\",\n          \"version_idsBand_id\": \"EU_863_870\",\n          \"network_idsNet_id\": \"000013\",\n          \"network_idsNs_id\": \"EC656E0000000181\",\n          \"network_idsTenant_id\": \"ttn\",\n          \"network_idsCluster_id\": \"eu1\",\n          \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n          \"deviceVersionsHardware\": 26,\n          \"deviceVersionsSoftware\": 42,\n          \"joinRetryPeriod\": 10,\n          \"keepAliveTime\": 4,\n          \"openWindowParamsDelta\": 1,\n          \"openWindowParamsDuration\": 10,\n          \"openWindowParamsEnabled\": false,\n          \"openWindowParamsMotorPosition\": 0,\n          \"operationalMode\": 1,\n          \"temperatureRangeSettingsMax\": 21,\n          \"temperatureRangeSettingsMin\": 15,\n          \"uplinkType\": 0\n        },\n        \"metaData\": {\n          \"rssi\": -55\n        },\n        \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\"\n      },\n      \"sensorData\": {\n        \"attachedBackplate\": false,\n        \"batteryVoltage\": 3.3,\n        \"brokenSensor\": false,\n        \"calibrationFailed\": false,\n        \"childLock\": true,\n        \"highMotorConsumption\": false,\n        \"lowMotorConsumption\": false,\n        \"motorPosition\": 0,\n        \"motorRange\": 0,\n        \"openWindow\": false,\n        \"perceiveAsOnline\": true,\n        \"reason\": 81,\n        \"relativeHumidity\": 67,\n        \"sensorTemperature\": 17.6,\n        \"targetTemperature\": 20,\n        \"battery\": 87,\n        \"valve_pct\": 100,\n        \"system_mode\": \"off\"\n      },\n      \"metadata\": {\n        \"rssi\": -119\n      },\n      \"newData\": {\n        \"deviceUpdate\": 1701851711922,\n        \"sensorData\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 67,\n          \"sensorTemperature\": 17.6,\n          \"targetTemperature\": 20,\n          \"battery\": 87,\n          \"valve_pct\": 100,\n          \"system_mode\": \"off\",\n          \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n          \"f_cnt\": 1838,\n          \"rx_metadata0\": {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-03T21:21:52.483198881Z\",\n            \"timestamp\": 2048701507,\n            \"rssi\": -60,\n            \"channel_rssi\": -60,\n            \"snr\": 9,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQw+jy0AcaDAjw4rOrBhCl+sSIAiC4y4CB0IsQ\",\n            \"received_at\": \"2023-12-03T21:21:52.517249096Z\"\n          },\n          \"settingsData_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"settingsFrequency\": \"868300000\",\n          \"settingsTimestamp\": 2048701507,\n          \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n          \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n          \"consumed_airtime\": \"0.041216s\",\n          \"locationsUser\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"version_idsBrand_id\": \"mclimate\",\n          \"version_idsModel_id\": \"vicki\",\n          \"version_idsHardware_version\": \"2.6\",\n          \"version_idsFirmware_version\": \"4.2\",\n          \"version_idsBand_id\": \"EU_863_870\",\n          \"network_idsNet_id\": \"000013\",\n          \"network_idsNs_id\": \"EC656E0000000181\",\n          \"network_idsTenant_id\": \"ttn\",\n          \"network_idsCluster_id\": \"eu1\",\n          \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n          \"deviceVersionsHardware\": 26,\n          \"deviceVersionsSoftware\": 42,\n          \"joinRetryPeriod\": 10,\n          \"keepAliveTime\": 4,\n          \"openWindowParamsDelta\": 1,\n          \"openWindowParamsDuration\": 10,\n          \"openWindowParamsEnabled\": false,\n          \"openWindowParamsMotorPosition\": 0,\n          \"operationalMode\": 1,\n          \"temperatureRangeSettingsMax\": 21,\n          \"temperatureRangeSettingsMin\": 15,\n          \"uplinkType\": 0\n        },\n        \"metaData\": {\n          \"rssi\": -119\n        },\n        \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\"\n      }\n    },\n    \"sensorData\": {\n      \"attachedBackplate\": false,\n      \"batteryVoltage\": 3.3,\n      \"brokenSensor\": false,\n      \"calibrationFailed\": false,\n      \"childLock\": true,\n      \"highMotorConsumption\": false,\n      \"lowMotorConsumption\": false,\n      \"motorPosition\": 0,\n      \"motorRange\": 0,\n      \"openWindow\": false,\n      \"perceiveAsOnline\": true,\n      \"reason\": 81,\n      \"relativeHumidity\": 67,\n      \"sensorTemperature\": 17.6,\n      \"targetTemperature\": 20,\n      \"battery\": 87,\n      \"valve_pct\": 100,\n      \"system_mode\": \"off\",\n      \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n      \"f_cnt\": 1838,\n      \"settingsFrequency\": \"868300000\",\n      \"settingsTimestamp\": 2048701507,\n      \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n      \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n      \"consumed_airtime\": \"0.041216s\",\n      \"version_idsBrand_id\": \"mclimate\",\n      \"version_idsModel_id\": \"vicki\",\n      \"version_idsHardware_version\": \"2.6\",\n      \"version_idsFirmware_version\": \"4.2\",\n      \"version_idsBand_id\": \"EU_863_870\",\n      \"network_idsNet_id\": \"000013\",\n      \"network_idsNs_id\": \"EC656E0000000181\",\n      \"network_idsTenant_id\": \"ttn\",\n      \"network_idsCluster_id\": \"eu1\",\n      \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n      \"deviceVersionsHardware\": 26,\n      \"deviceVersionsSoftware\": 42,\n      \"joinRetryPeriod\": 10,\n      \"keepAliveTime\": 4,\n      \"openWindowParamsDelta\": 1,\n      \"openWindowParamsDuration\": 10,\n      \"openWindowParamsEnabled\": false,\n      \"openWindowParamsMotorPosition\": 0,\n      \"operationalMode\": 1,\n      \"temperatureRangeSettingsMax\": 21,\n      \"temperatureRangeSettingsMin\": 15,\n      \"uplinkType\": 0\n    },\n    \"metaData\": {\n      \"rssi\": -119\n    },\n    \"_msgid\": \"75b64cb9ffbca229\",\n    \"device\": {\n      \"identifiers\": [\n        \"lora2nodered2mqtt_eui-70b3d52dd3015c93\"\n      ],\n      \"manufacturer\": \"MClimate\",\n      \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n      \"name\": \"eui-70b3d52dd3015c93\",\n      \"sw_version\": 42,\n      \"hw_version\": 26\n    },\n    \"homeassistant\": [\n      {\n        \"topic\": \"homeassistant/climate/eui-70b3d52dd3015c93/trv_climate/config\",\n        \"payload\": {\n          \"device\": {\n            \"identifiers\": [\n              \"lora2nodered2mqtt_eui-70b3d52dd3015c93\"\n            ],\n            \"manufacturer\": \"MClimate\",\n            \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n            \"name\": \"eui-70b3d52dd3015c93\",\n            \"sw_version\": 42,\n            \"hw_version\": 26\n          },\n          \"object_id\": \"eui-70b3d52dd3015c93_trv_climate\",\n          \"unique_id\": \"eui-70b3d52dd3015c93_trv_climate_lora2nodered2mqtt\",\n          \"device_class\": \"temperature\",\n          \"name\": \"Radiator thermostat\",\n          \"modes\": [\n            \"off\",\n            \"heat\"\n          ],\n          \"max_temp\": 21,\n          \"min_temp\": 15,\n          \"temperature_unit\": \"C\",\n          \"temp_step\": 1,\n          \"json_attributes_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"mode_state_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"mode_state_template\": \"{{ value_json.system_mode  if value_json.system_mode==\\\"off\\\" else \\\"heat\\\"}}\",\n          \"current_temperature_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"current_temperature_template\": \"{{ value_json.sensorTemperature }}\",\n          \"temperature_state_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"temperature_state_template\": \"{{ value_json.targetTemperature }}\",\n          \"temperature_command_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/set/targetTemperature\",\n          \"mode_command_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/set/system_mode\"\n        }\n      },\n      {\n        \"topic\": \"homeassistant/number/eui-70b3d52dd3015c93/trv_number/config\",\n        \"payload\": {\n          \"device\": {\n            \"identifiers\": [\n              \"lora2nodered2mqtt_eui-70b3d52dd3015c93\"\n            ],\n            \"manufacturer\": \"MClimate\",\n            \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n            \"name\": \"eui-70b3d52dd3015c93\",\n            \"sw_version\": 42,\n            \"hw_version\": 26\n          },\n          \"object_id\": \"eui-70b3d52dd3015c93_trv_number\",\n          \"unique_id\": \"eui-70b3d52dd3015c93_trv_number_lora2nodered2mqtt\",\n          \"device_class\": \"temperature\",\n          \"name\": \"Target temperature\",\n          \"max\": 21,\n          \"min\": 15,\n          \"unit_of_measurement\": \"°C\",\n          \"step\": 1,\n          \"mode\": \"slider\",\n          \"state_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"value_template\": \"{{ value_json.targetTemperature }}\",\n          \"command_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/set/targetTemperature\"\n        }\n      },\n      {\n        \"topic\": \"homeassistant/sensor/eui-70b3d52dd3015c93/battery/config\",\n        \"payload\": {\n          \"device\": {\n            \"identifiers\": [\n              \"lora2nodered2mqtt_eui-70b3d52dd3015c93\"\n            ],\n            \"manufacturer\": \"MClimate\",\n            \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n            \"name\": \"eui-70b3d52dd3015c93\",\n            \"sw_version\": 42,\n            \"hw_version\": 26\n          },\n          \"object_id\": \"eui-70b3d52dd3015c93_battery\",\n          \"unique_id\": \"eui-70b3d52dd3015c93_battery_lora2nodered2mqtt\",\n          \"enabled_by_default\": true,\n          \"state_class\": \"measurement\",\n          \"device_class\": \"battery\",\n          \"entity_category\": \"diagnostic\",\n          \"unit_of_measurement\": \"%\",\n          \"state_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"json_attributes_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"value_template\": \"{{ value_json.battery }}\"\n        }\n      },\n      {\n        \"topic\": \"homeassistant/sensor/eui-70b3d52dd3015c93/rssi/config\",\n        \"payload\": {\n          \"device\": {\n            \"identifiers\": [\n              \"lora2nodered2mqtt_eui-70b3d52dd3015c93\"\n            ],\n            \"manufacturer\": \"MClimate\",\n            \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n            \"name\": \"eui-70b3d52dd3015c93\",\n            \"sw_version\": 42,\n            \"hw_version\": 26\n          },\n          \"object_id\": \"eui-70b3d52dd3015c93_rssi\",\n          \"unique_id\": \"eui-70b3d52dd3015c93_rssi_lora2nodered2mqtt\",\n          \"enabled_by_default\": false,\n          \"state_class\": \"measurement\",\n          \"device_class\": \"signal_strength\",\n          \"entity_category\": \"diagnostic\",\n          \"state_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"json_attributes_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"value_template\": \"{{ value_json.rssi }}\"\n        }\n      },\n      {\n        \"topic\": \"homeassistant/sensor/eui-70b3d52dd3015c93/valve_pct/config\",\n        \"payload\": {\n          \"device\": {\n            \"identifiers\": [\n              \"lora2nodered2mqtt_eui-70b3d52dd3015c93\"\n            ],\n            \"manufacturer\": \"MClimate\",\n            \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n            \"name\": \"eui-70b3d52dd3015c93\",\n            \"sw_version\": 42,\n            \"hw_version\": 26\n          },\n          \"object_id\": \"eui-70b3d52dd3015c93_valve_pct\",\n          \"unique_id\": \"eui-70b3d52dd3015c93_valve_pct_lora2nodered2mqtt\",\n          \"name\": \"Valve open status\",\n          \"unit_of_measurement\": \"%\",\n          \"icon\": \"mdi:pipe-valve\",\n          \"state_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"json_attributes_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"value_template\": \"{{ value_json.valve_pct }}\"\n        }\n      },\n      {\n        \"topic\": \"homeassistant/sensor/eui-70b3d52dd3015c93/humidty/config\",\n        \"payload\": {\n          \"device\": {\n            \"identifiers\": [\n              \"lora2nodered2mqtt_eui-70b3d52dd3015c93\"\n            ],\n            \"manufacturer\": \"MClimate\",\n            \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n            \"name\": \"eui-70b3d52dd3015c93\",\n            \"sw_version\": 42,\n            \"hw_version\": 26\n          },\n          \"object_id\": \"eui-70b3d52dd3015c93_humidity\",\n          \"unique_id\": \"eui-70b3d52dd3015c93_humidity_lora2nodered2mqtt\",\n          \"device_class\": \"humidity\",\n          \"unit_of_measurement\": \"%\",\n          \"state_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"json_attributes_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"value_template\": \"{{ value_json.relativeHumidity }}\"\n        }\n      },\n      {\n        \"topic\": \"homeassistant/binary_sensor/eui-70b3d52dd3015c93/attachedBackplate/config\",\n        \"payload\": {\n          \"device\": {\n            \"identifiers\": [\n              \"lora2nodered2mqtt_eui-70b3d52dd3015c93\"\n            ],\n            \"manufacturer\": \"MClimate\",\n            \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n            \"name\": \"eui-70b3d52dd3015c93\",\n            \"sw_version\": 42,\n            \"hw_version\": 26\n          },\n          \"object_id\": \"eui-70b3d52dd3015c93_attachedBackplate_\",\n          \"unique_id\": \"eui-70b3d52dd3015c93_attachedBackplate_lora2nodered2mqtt\",\n          \"name\": \"Attached backplate\",\n          \"icon\": \"mdi:pump\",\n          \"payload_off\": false,\n          \"payload_on\": true,\n          \"payload_available\": \"on\",\n          \"payload_not_available\": \"off\",\n          \"state_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"json_attributes_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"value_template\": \"{{ value_json.attachedBackplate }}\"\n        }\n      },\n      {\n        \"topic\": \"homeassistant/binary_sensor/eui-70b3d52dd3015c93/childLock/config\",\n        \"payload\": {\n          \"device\": {\n            \"identifiers\": [\n              \"lora2nodered2mqtt_eui-70b3d52dd3015c93\"\n            ],\n            \"manufacturer\": \"MClimate\",\n            \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n            \"name\": \"eui-70b3d52dd3015c93\",\n            \"sw_version\": 42,\n            \"hw_version\": 26\n          },\n          \"object_id\": \"eui-70b3d52dd3015c93_childLock\",\n          \"unique_id\": \"eui-70b3d52dd3015c93_childLock_lora2nodered2mqtt\",\n          \"name\": \"Child lock\",\n          \"icon\": \"mdi:lock\",\n          \"payload_off\": false,\n          \"payload_on\": true,\n          \"payload_available\": \"on\",\n          \"payload_not_available\": \"off\",\n          \"state_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"json_attributes_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"value_template\": \"{{ value_json.childLock }}\"\n        }\n      },\n      {\n        \"topic\": \"homeassistant/binary_sensor/eui-70b3d52dd3015c93/openWindow/config\",\n        \"payload\": {\n          \"device\": {\n            \"identifiers\": [\n              \"lora2nodered2mqtt_eui-70b3d52dd3015c93\"\n            ],\n            \"manufacturer\": \"MClimate\",\n            \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n            \"name\": \"eui-70b3d52dd3015c93\",\n            \"sw_version\": 42,\n            \"hw_version\": 26\n          },\n          \"object_id\": \"eui-70b3d52dd3015c93_openWindow\",\n          \"unique_id\": \"eui-70b3d52dd3015c93_openWindow_lora2nodered2mqtt\",\n          \"name\": \"Open window detection\",\n          \"icon\": \"mdi:window-closed-variant\",\n          \"payload_off\": false,\n          \"payload_on\": true,\n          \"payload_available\": \"on\",\n          \"payload_not_available\": \"off\",\n          \"state_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"json_attributes_topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n          \"value_template\": \"{{ value_json.openWindow }}\"\n        }\n      }\n    ]\n  }\n}\n",
        "x": 1450,
        "y": 300,
        "wires": []
    },
    {
        "id": "fe96cbaa2e6280c0",
        "type": "comment",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "msg example",
        "info": "{\n  \"msg\": {\n    \"settings\": {\n      \"manufacturer\": \"MClimate\",\n      \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n      \"topicHomeassistantDeviceStatus\": \"lora2nodered2mqtt\",\n      \"topicHomeassistant\": \"homeassistant\",\n      \"topicsLora\": {\n        \"deviceName\": \"end_device_ids/device_id\",\n        \"sensorData\": \"uplink_message/decoded_payload\",\n        \"gatewayData\": \"uplink_message/rx_metadata\"\n      },\n      \"deviceUpdateWindow\": 1,\n      \"batteryFull\": 3.4,\n      \"batteryLow\": 2.6,\n      \"topicHomeassistantDeviceGet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n      \"topicHomeassistantDeviceSet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/set\"\n    },\n    \"result\": {\n      \"timestamp\": 1701851952558,\n      \"deviceName\": \"eui-70b3d52dd3015c93\",\n      \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\",\n      \"prefiousData\": {\n        \"deviceUpdate\": 1701851711922,\n        \"sensorData\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 67,\n          \"sensorTemperature\": 17.6,\n          \"targetTemperature\": 20,\n          \"battery\": 87,\n          \"valve_pct\": 100,\n          \"system_mode\": \"off\",\n          \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n          \"f_cnt\": 1838,\n          \"rx_metadata0\": {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-03T21:21:52.483198881Z\",\n            \"timestamp\": 2048701507,\n            \"rssi\": -60,\n            \"channel_rssi\": -60,\n            \"snr\": 9,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQw+jy0AcaDAjw4rOrBhCl+sSIAiC4y4CB0IsQ\",\n            \"received_at\": \"2023-12-03T21:21:52.517249096Z\"\n          },\n          \"settingsData_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"settingsFrequency\": \"868300000\",\n          \"settingsTimestamp\": 2048701507,\n          \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n          \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n          \"consumed_airtime\": \"0.041216s\",\n          \"locationsUser\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"version_idsBrand_id\": \"mclimate\",\n          \"version_idsModel_id\": \"vicki\",\n          \"version_idsHardware_version\": \"2.6\",\n          \"version_idsFirmware_version\": \"4.2\",\n          \"version_idsBand_id\": \"EU_863_870\",\n          \"network_idsNet_id\": \"000013\",\n          \"network_idsNs_id\": \"EC656E0000000181\",\n          \"network_idsTenant_id\": \"ttn\",\n          \"network_idsCluster_id\": \"eu1\",\n          \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n          \"deviceVersionsHardware\": 26,\n          \"deviceVersionsSoftware\": 42,\n          \"joinRetryPeriod\": 10,\n          \"keepAliveTime\": 4,\n          \"openWindowParamsDelta\": 1,\n          \"openWindowParamsDuration\": 10,\n          \"openWindowParamsEnabled\": false,\n          \"openWindowParamsMotorPosition\": 0,\n          \"operationalMode\": 1,\n          \"temperatureRangeSettingsMax\": 21,\n          \"temperatureRangeSettingsMin\": 15,\n          \"uplinkType\": 0\n        },\n        \"metaData\": {\n          \"rssi\": -119\n        },\n        \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\"\n      },\n      \"sensorData\": {\n        \"attachedBackplate\": false,\n        \"batteryVoltage\": 3.3,\n        \"brokenSensor\": false,\n        \"calibrationFailed\": false,\n        \"childLock\": true,\n        \"highMotorConsumption\": false,\n        \"lowMotorConsumption\": false,\n        \"motorPosition\": 0,\n        \"motorRange\": 0,\n        \"openWindow\": false,\n        \"perceiveAsOnline\": true,\n        \"reason\": 81,\n        \"relativeHumidity\": 67,\n        \"sensorTemperature\": 17.6,\n        \"targetTemperature\": 20,\n        \"battery\": 87,\n        \"valve_pct\": 100,\n        \"system_mode\": \"off\"\n      },\n      \"metadata\": {\n        \"rssi\": -118\n      },\n      \"newData\": {\n        \"deviceUpdate\": 1701851711922,\n        \"sensorData\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 67,\n          \"sensorTemperature\": 17.6,\n          \"targetTemperature\": 20,\n          \"battery\": 87,\n          \"valve_pct\": 100,\n          \"system_mode\": \"off\",\n          \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n          \"f_cnt\": 1838,\n          \"rx_metadata0\": {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-03T21:21:52.483198881Z\",\n            \"timestamp\": 2048701507,\n            \"rssi\": -60,\n            \"channel_rssi\": -60,\n            \"snr\": 9,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQw+jy0AcaDAjw4rOrBhCl+sSIAiC4y4CB0IsQ\",\n            \"received_at\": \"2023-12-03T21:21:52.517249096Z\"\n          },\n          \"settingsData_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"settingsFrequency\": \"868300000\",\n          \"settingsTimestamp\": 2048701507,\n          \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n          \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n          \"consumed_airtime\": \"0.041216s\",\n          \"locationsUser\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"version_idsBrand_id\": \"mclimate\",\n          \"version_idsModel_id\": \"vicki\",\n          \"version_idsHardware_version\": \"2.6\",\n          \"version_idsFirmware_version\": \"4.2\",\n          \"version_idsBand_id\": \"EU_863_870\",\n          \"network_idsNet_id\": \"000013\",\n          \"network_idsNs_id\": \"EC656E0000000181\",\n          \"network_idsTenant_id\": \"ttn\",\n          \"network_idsCluster_id\": \"eu1\",\n          \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n          \"deviceVersionsHardware\": 26,\n          \"deviceVersionsSoftware\": 42,\n          \"joinRetryPeriod\": 10,\n          \"keepAliveTime\": 4,\n          \"openWindowParamsDelta\": 1,\n          \"openWindowParamsDuration\": 10,\n          \"openWindowParamsEnabled\": false,\n          \"openWindowParamsMotorPosition\": 0,\n          \"operationalMode\": 1,\n          \"temperatureRangeSettingsMax\": 21,\n          \"temperatureRangeSettingsMin\": 15,\n          \"uplinkType\": 0\n        },\n        \"metaData\": {\n          \"rssi\": -118\n        },\n        \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\"\n      }\n    },\n    \"sensorData\": {\n      \"attachedBackplate\": false,\n      \"batteryVoltage\": 3.3,\n      \"brokenSensor\": false,\n      \"calibrationFailed\": false,\n      \"childLock\": true,\n      \"highMotorConsumption\": false,\n      \"lowMotorConsumption\": false,\n      \"motorPosition\": 0,\n      \"motorRange\": 0,\n      \"openWindow\": false,\n      \"perceiveAsOnline\": true,\n      \"reason\": 81,\n      \"relativeHumidity\": 67,\n      \"sensorTemperature\": 17.6,\n      \"targetTemperature\": 20,\n      \"battery\": 87,\n      \"valve_pct\": 100,\n      \"system_mode\": \"off\",\n      \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n      \"f_cnt\": 1838,\n      \"settingsFrequency\": \"868300000\",\n      \"settingsTimestamp\": 2048701507,\n      \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n      \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n      \"consumed_airtime\": \"0.041216s\",\n      \"version_idsBrand_id\": \"mclimate\",\n      \"version_idsModel_id\": \"vicki\",\n      \"version_idsHardware_version\": \"2.6\",\n      \"version_idsFirmware_version\": \"4.2\",\n      \"version_idsBand_id\": \"EU_863_870\",\n      \"network_idsNet_id\": \"000013\",\n      \"network_idsNs_id\": \"EC656E0000000181\",\n      \"network_idsTenant_id\": \"ttn\",\n      \"network_idsCluster_id\": \"eu1\",\n      \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n      \"deviceVersionsHardware\": 26,\n      \"deviceVersionsSoftware\": 42,\n      \"joinRetryPeriod\": 10,\n      \"keepAliveTime\": 4,\n      \"openWindowParamsDelta\": 1,\n      \"openWindowParamsDuration\": 10,\n      \"openWindowParamsEnabled\": false,\n      \"openWindowParamsMotorPosition\": 0,\n      \"operationalMode\": 1,\n      \"temperatureRangeSettingsMax\": 21,\n      \"temperatureRangeSettingsMin\": 15,\n      \"uplinkType\": 0\n    },\n    \"metaData\": {\n      \"rssi\": -118\n    },\n    \"_msgid\": \"530cec5666e9ee1d\"\n  }\n}\n",
        "x": 1450,
        "y": 580,
        "wires": []
    },
    {
        "id": "9991c42442a877a2",
        "type": "comment",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "msg example",
        "info": "{\n  \"msg\": {\n    \"topic\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/set/targetTemperature\",\n    \"payload\": 19,\n    \"qos\": 0,\n    \"retain\": false,\n    \"_msgid\": \"e463e7f288f4cea4\",\n    \"settings\": {\n      \"manufacturer\": \"MClimate\",\n      \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n      \"topicHomeassistantDeviceStatus\": \"lora2nodered2mqtt\",\n      \"topicHomeassistant\": \"homeassistant\",\n      \"topicsLora\": {\n        \"deviceName\": \"end_device_ids/device_id\",\n        \"sensorData\": \"uplink_message/decoded_payload\",\n        \"gatewayData\": \"uplink_message/rx_metadata\"\n      },\n      \"deviceUpdateWindow\": 1,\n      \"batteryFull\": 3.4,\n      \"batteryLow\": 2.6,\n      \"topicHomeassistantDeviceGet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n      \"topicHomeassistantDeviceSet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/set\"\n    },\n    \"temp\": {\n      \"topicArray\": [\n        \"lora2nodered2mqtt\",\n        \"vicki\",\n        \"eui-70b3d52dd3015c93\",\n        \"set\",\n        \"targetTemperature\"\n      ]\n    },\n    \"result\": {\n      \"deviceName\": \"eui-70b3d52dd3015c93\",\n      \"variable\": \"targetTemperature\",\n      \"commandSet\": \"setTargetTemperature\",\n      \"value\": 19,\n      \"timestamp\": 1701852060468,\n      \"topicHomeassistantDeviceGe\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n      \"topicHomeassistantDeviceSet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/set\",\n      \"prefiousData\": {\n        \"deviceUpdate\": 1701851952558,\n        \"sensorData\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 67,\n          \"sensorTemperature\": 17.6,\n          \"targetTemperature\": 20,\n          \"battery\": 87,\n          \"valve_pct\": 100,\n          \"system_mode\": \"off\",\n          \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n          \"f_cnt\": 1838,\n          \"rx_metadata0\": {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-03T21:21:52.483198881Z\",\n            \"timestamp\": 2048701507,\n            \"rssi\": -60,\n            \"channel_rssi\": -60,\n            \"snr\": 9,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQw+jy0AcaDAjw4rOrBhCl+sSIAiC4y4CB0IsQ\",\n            \"received_at\": \"2023-12-03T21:21:52.517249096Z\"\n          },\n          \"settingsData_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"settingsFrequency\": \"868300000\",\n          \"settingsTimestamp\": 2048701507,\n          \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n          \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n          \"consumed_airtime\": \"0.041216s\",\n          \"locationsUser\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"version_idsBrand_id\": \"mclimate\",\n          \"version_idsModel_id\": \"vicki\",\n          \"version_idsHardware_version\": \"2.6\",\n          \"version_idsFirmware_version\": \"4.2\",\n          \"version_idsBand_id\": \"EU_863_870\",\n          \"network_idsNet_id\": \"000013\",\n          \"network_idsNs_id\": \"EC656E0000000181\",\n          \"network_idsTenant_id\": \"ttn\",\n          \"network_idsCluster_id\": \"eu1\",\n          \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n          \"deviceVersionsHardware\": 26,\n          \"deviceVersionsSoftware\": 42,\n          \"joinRetryPeriod\": 10,\n          \"keepAliveTime\": 4,\n          \"openWindowParamsDelta\": 1,\n          \"openWindowParamsDuration\": 10,\n          \"openWindowParamsEnabled\": false,\n          \"openWindowParamsMotorPosition\": 0,\n          \"operationalMode\": 1,\n          \"temperatureRangeSettingsMax\": 21,\n          \"temperatureRangeSettingsMin\": 15,\n          \"uplinkType\": 0\n        },\n        \"metaData\": {\n          \"rssi\": -118\n        },\n        \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\"\n      },\n      \"newData\": {\n        \"deviceUpdate\": 1701851952558,\n        \"sensorData\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 67,\n          \"sensorTemperature\": 17.6,\n          \"targetTemperature\": 19,\n          \"battery\": 87,\n          \"valve_pct\": 100,\n          \"system_mode\": \"off\",\n          \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n          \"f_cnt\": 1838,\n          \"rx_metadata0\": {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-03T21:21:52.483198881Z\",\n            \"timestamp\": 2048701507,\n            \"rssi\": -60,\n            \"channel_rssi\": -60,\n            \"snr\": 9,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQw+jy0AcaDAjw4rOrBhCl+sSIAiC4y4CB0IsQ\",\n            \"received_at\": \"2023-12-03T21:21:52.517249096Z\"\n          },\n          \"settingsData_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"settingsFrequency\": \"868300000\",\n          \"settingsTimestamp\": 2048701507,\n          \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n          \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n          \"consumed_airtime\": \"0.041216s\",\n          \"locationsUser\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"version_idsBrand_id\": \"mclimate\",\n          \"version_idsModel_id\": \"vicki\",\n          \"version_idsHardware_version\": \"2.6\",\n          \"version_idsFirmware_version\": \"4.2\",\n          \"version_idsBand_id\": \"EU_863_870\",\n          \"network_idsNet_id\": \"000013\",\n          \"network_idsNs_id\": \"EC656E0000000181\",\n          \"network_idsTenant_id\": \"ttn\",\n          \"network_idsCluster_id\": \"eu1\",\n          \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n          \"deviceVersionsHardware\": 26,\n          \"deviceVersionsSoftware\": 42,\n          \"joinRetryPeriod\": 10,\n          \"keepAliveTime\": 4,\n          \"openWindowParamsDelta\": 1,\n          \"openWindowParamsDuration\": 10,\n          \"openWindowParamsEnabled\": false,\n          \"openWindowParamsMotorPosition\": 0,\n          \"operationalMode\": 1,\n          \"temperatureRangeSettingsMax\": 21,\n          \"temperatureRangeSettingsMin\": 15,\n          \"uplinkType\": 0\n        },\n        \"metaData\": {\n          \"rssi\": -118\n        },\n        \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\",\n        \"downlink\": {\n          \"targetTemperature\": 20,\n          \"commandSet\": \"setTargetTemperature\",\n          \"variable\": \"targetTemperature\",\n          \"value\": 19,\n          \"timestamp\": 1701852060468\n        }\n      }\n    },\n    \"sensorData\": {\n      \"attachedBackplate\": false,\n      \"batteryVoltage\": 3.3,\n      \"brokenSensor\": false,\n      \"calibrationFailed\": false,\n      \"childLock\": true,\n      \"highMotorConsumption\": false,\n      \"lowMotorConsumption\": false,\n      \"motorPosition\": 0,\n      \"motorRange\": 0,\n      \"openWindow\": false,\n      \"perceiveAsOnline\": true,\n      \"reason\": 81,\n      \"relativeHumidity\": 67,\n      \"sensorTemperature\": 17.6,\n      \"targetTemperature\": 19,\n      \"battery\": 87,\n      \"valve_pct\": 100,\n      \"system_mode\": \"off\",\n      \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n      \"f_cnt\": 1838,\n      \"settingsFrequency\": \"868300000\",\n      \"settingsTimestamp\": 2048701507,\n      \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n      \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n      \"consumed_airtime\": \"0.041216s\",\n      \"version_idsBrand_id\": \"mclimate\",\n      \"version_idsModel_id\": \"vicki\",\n      \"version_idsHardware_version\": \"2.6\",\n      \"version_idsFirmware_version\": \"4.2\",\n      \"version_idsBand_id\": \"EU_863_870\",\n      \"network_idsNet_id\": \"000013\",\n      \"network_idsNs_id\": \"EC656E0000000181\",\n      \"network_idsTenant_id\": \"ttn\",\n      \"network_idsCluster_id\": \"eu1\",\n      \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n      \"deviceVersionsHardware\": 26,\n      \"deviceVersionsSoftware\": 42,\n      \"joinRetryPeriod\": 10,\n      \"keepAliveTime\": 4,\n      \"openWindowParamsDelta\": 1,\n      \"openWindowParamsDuration\": 10,\n      \"openWindowParamsEnabled\": false,\n      \"openWindowParamsMotorPosition\": 0,\n      \"operationalMode\": 1,\n      \"temperatureRangeSettingsMax\": 21,\n      \"temperatureRangeSettingsMin\": 15,\n      \"uplinkType\": 0\n    },\n    \"metaData\": {\n      \"rssi\": -118\n    }\n  }\n}\n",
        "x": 1450,
        "y": 740,
        "wires": []
    },
    {
        "id": "3749d18dc34888d3",
        "type": "comment",
        "z": "ec12d4fa86b9e679",
        "g": "487d42b63856018f",
        "name": "msg example",
        "info": "{\n  \"msg\": {\n    \"settings\": {\n      \"manufacturer\": \"MClimate\",\n      \"model\": \"Vicki - LoRaWAN Smart Radiator Thermostat\",\n      \"topicHomeassistantDeviceStatus\": \"lora2nodered2mqtt\",\n      \"topicHomeassistant\": \"homeassistant\",\n      \"topicsLora\": {\n        \"deviceName\": \"end_device_ids/device_id\",\n        \"sensorData\": \"uplink_message/decoded_payload\",\n        \"gatewayData\": \"uplink_message/rx_metadata\"\n      },\n      \"deviceUpdateWindow\": 1,\n      \"batteryFull\": 3.4,\n      \"batteryLow\": 2.6,\n      \"topicHomeassistantDeviceGet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015cd5/get\",\n      \"topicHomeassistantDeviceSet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015cd5/set\"\n    },\n    \"result\": {\n      \"deviceName\": \"eui-70b3d52dd3015c93\",\n      \"variable\": \"targetTemperature\",\n      \"commandSet\": \"setTargetTemperature\",\n      \"value\": 20,\n      \"timestamp\": 1701852189332,\n      \"topicHomeassistantDeviceGe\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/get\",\n      \"topicHomeassistantDeviceSet\": \"lora2nodered2mqtt/vicki/eui-70b3d52dd3015c93/set\",\n      \"prefiousData\": {\n        \"deviceUpdate\": 1701852193230,\n        \"sensorData\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 67,\n          \"sensorTemperature\": 17.6,\n          \"targetTemperature\": 20,\n          \"battery\": 87,\n          \"valve_pct\": 100,\n          \"system_mode\": \"off\",\n          \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n          \"f_cnt\": 1838,\n          \"rx_metadata0\": {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-03T21:21:52.483198881Z\",\n            \"timestamp\": 2048701507,\n            \"rssi\": -60,\n            \"channel_rssi\": -60,\n            \"snr\": 9,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQw+jy0AcaDAjw4rOrBhCl+sSIAiC4y4CB0IsQ\",\n            \"received_at\": \"2023-12-03T21:21:52.517249096Z\"\n          },\n          \"settingsData_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"settingsFrequency\": \"868300000\",\n          \"settingsTimestamp\": 2048701507,\n          \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n          \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n          \"consumed_airtime\": \"0.041216s\",\n          \"locationsUser\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"version_idsBrand_id\": \"mclimate\",\n          \"version_idsModel_id\": \"vicki\",\n          \"version_idsHardware_version\": \"2.6\",\n          \"version_idsFirmware_version\": \"4.2\",\n          \"version_idsBand_id\": \"EU_863_870\",\n          \"network_idsNet_id\": \"000013\",\n          \"network_idsNs_id\": \"EC656E0000000181\",\n          \"network_idsTenant_id\": \"ttn\",\n          \"network_idsCluster_id\": \"eu1\",\n          \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n          \"deviceVersionsHardware\": 26,\n          \"deviceVersionsSoftware\": 42,\n          \"joinRetryPeriod\": 10,\n          \"keepAliveTime\": 4,\n          \"openWindowParamsDelta\": 1,\n          \"openWindowParamsDuration\": 10,\n          \"openWindowParamsEnabled\": false,\n          \"openWindowParamsMotorPosition\": 0,\n          \"operationalMode\": 1,\n          \"temperatureRangeSettingsMax\": 21,\n          \"temperatureRangeSettingsMin\": 15,\n          \"uplinkType\": 0\n        },\n        \"metaData\": {\n          \"rssi\": -53\n        },\n        \"downlink\": {\n          \"targetTemperature\": 19,\n          \"commandSet\": \"setTargetTemperature\",\n          \"variable\": \"targetTemperature\",\n          \"value\": 20,\n          \"timestamp\": 1701852189332\n        },\n        \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\"\n      },\n      \"newData\": {\n        \"deviceUpdate\": 1701852193230,\n        \"sensorData\": {\n          \"attachedBackplate\": false,\n          \"batteryVoltage\": 3.3,\n          \"brokenSensor\": false,\n          \"calibrationFailed\": false,\n          \"childLock\": true,\n          \"highMotorConsumption\": false,\n          \"lowMotorConsumption\": false,\n          \"motorPosition\": 0,\n          \"motorRange\": 0,\n          \"openWindow\": false,\n          \"perceiveAsOnline\": true,\n          \"reason\": 81,\n          \"relativeHumidity\": 67,\n          \"sensorTemperature\": 17.6,\n          \"targetTemperature\": 20,\n          \"battery\": 87,\n          \"valve_pct\": 100,\n          \"system_mode\": \"off\",\n          \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n          \"f_cnt\": 1838,\n          \"rx_metadata0\": {\n            \"gateway_ids\": {\n              \"gateway_id\": \"tabs-noork\",\n              \"eui\": \"58A0CBFFFE800549\"\n            },\n            \"time\": \"2023-12-03T21:21:52.483198881Z\",\n            \"timestamp\": 2048701507,\n            \"rssi\": -60,\n            \"channel_rssi\": -60,\n            \"snr\": 9,\n            \"location\": {\n              \"latitude\": 52.070279619689224,\n              \"longitude\": 5.123664071930953,\n              \"altitude\": 6,\n              \"source\": \"SOURCE_REGISTRY\"\n            },\n            \"uplink_token\": \"ChgKFgoKdGFicy1ub29yaxIIWKDL//6ABUkQw+jy0AcaDAjw4rOrBhCl+sSIAiC4y4CB0IsQ\",\n            \"received_at\": \"2023-12-03T21:21:52.517249096Z\"\n          },\n          \"settingsData_rate\": {\n            \"lora\": {\n              \"bandwidth\": 125000,\n              \"spreading_factor\": 7,\n              \"coding_rate\": \"4/5\"\n            }\n          },\n          \"settingsFrequency\": \"868300000\",\n          \"settingsTimestamp\": 2048701507,\n          \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n          \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n          \"consumed_airtime\": \"0.041216s\",\n          \"locationsUser\": {\n            \"latitude\": 52.07026675437131,\n            \"longitude\": 5.123675616067281,\n            \"source\": \"SOURCE_REGISTRY\"\n          },\n          \"version_idsBrand_id\": \"mclimate\",\n          \"version_idsModel_id\": \"vicki\",\n          \"version_idsHardware_version\": \"2.6\",\n          \"version_idsFirmware_version\": \"4.2\",\n          \"version_idsBand_id\": \"EU_863_870\",\n          \"network_idsNet_id\": \"000013\",\n          \"network_idsNs_id\": \"EC656E0000000181\",\n          \"network_idsTenant_id\": \"ttn\",\n          \"network_idsCluster_id\": \"eu1\",\n          \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n          \"deviceVersionsHardware\": 26,\n          \"deviceVersionsSoftware\": 42,\n          \"joinRetryPeriod\": 10,\n          \"keepAliveTime\": 4,\n          \"openWindowParamsDelta\": 1,\n          \"openWindowParamsDuration\": 10,\n          \"openWindowParamsEnabled\": false,\n          \"openWindowParamsMotorPosition\": 0,\n          \"operationalMode\": 1,\n          \"temperatureRangeSettingsMax\": 21,\n          \"temperatureRangeSettingsMin\": 15,\n          \"uplinkType\": 0\n        },\n        \"metaData\": {\n          \"rssi\": -53\n        },\n        \"loraTopic\": \"v3/ha-thermostaat@ttn/devices/eui-70b3d52dd3015c93\"\n      }\n    },\n    \"sensorData\": {\n      \"attachedBackplate\": false,\n      \"batteryVoltage\": 3.3,\n      \"brokenSensor\": false,\n      \"calibrationFailed\": false,\n      \"childLock\": true,\n      \"highMotorConsumption\": false,\n      \"lowMotorConsumption\": false,\n      \"motorPosition\": 0,\n      \"motorRange\": 0,\n      \"openWindow\": false,\n      \"perceiveAsOnline\": true,\n      \"reason\": 81,\n      \"relativeHumidity\": 67,\n      \"sensorTemperature\": 17.6,\n      \"targetTemperature\": 20,\n      \"battery\": 87,\n      \"valve_pct\": 100,\n      \"system_mode\": \"off\",\n      \"session_key_id\": \"AYwXkYPhnx+bewrlSNq5UQ==\",\n      \"f_cnt\": 1838,\n      \"settingsFrequency\": \"868300000\",\n      \"settingsTimestamp\": 2048701507,\n      \"settingsTime\": \"2023-12-03T21:21:52.483198881Z\",\n      \"received_at\": \"2023-12-03T21:21:52.555565015Z\",\n      \"consumed_airtime\": \"0.041216s\",\n      \"version_idsBrand_id\": \"mclimate\",\n      \"version_idsModel_id\": \"vicki\",\n      \"version_idsHardware_version\": \"2.6\",\n      \"version_idsFirmware_version\": \"4.2\",\n      \"version_idsBand_id\": \"EU_863_870\",\n      \"network_idsNet_id\": \"000013\",\n      \"network_idsNs_id\": \"EC656E0000000181\",\n      \"network_idsTenant_id\": \"ttn\",\n      \"network_idsCluster_id\": \"eu1\",\n      \"network_idsCluster_address\": \"eu1.cloud.thethings.network\",\n      \"deviceVersionsHardware\": 26,\n      \"deviceVersionsSoftware\": 42,\n      \"joinRetryPeriod\": 10,\n      \"keepAliveTime\": 4,\n      \"openWindowParamsDelta\": 1,\n      \"openWindowParamsDuration\": 10,\n      \"openWindowParamsEnabled\": false,\n      \"openWindowParamsMotorPosition\": 0,\n      \"operationalMode\": 1,\n      \"temperatureRangeSettingsMax\": 21,\n      \"temperatureRangeSettingsMin\": 15,\n      \"uplinkType\": 0\n    },\n    \"metaData\": {\n      \"rssi\": -118\n    },\n    \"downlink\": {\n      \"targetTemperature\": 19,\n      \"commandSet\": \"setTargetTemperature\",\n      \"variable\": \"targetTemperature\",\n      \"value\": 20,\n      \"timestamp\": 1701852189332\n    },\n    \"timestamp\": 1701852189332,\n    \"_msgid\": \"298eeb975a3612f7\",\n    \"exit\": \"lora message send\"\n  }\n}",
        "x": 1450,
        "y": 860,
        "wires": []
    },
    {
        "id": "84e0b16.466435",
        "type": "mqtt-broker",
        "name": "TTN ha-thermostaat",
        "broker": "mqtt://eu1.cloud.thethings.network",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "e0a907a349b19b14",
        "type": "mqtt-broker",
        "name": "server/mosquittoDev",
        "broker": "server.local",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]
